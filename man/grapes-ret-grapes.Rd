% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic_parsers.R
\name{\%ret\%}
\alias{\%ret\%}
\title{Return a fixed value upon successful parsing.}
\usage{
p \%ret\% c
}
\arguments{
\item{p}{a parser.}

\item{c}{a single-element character value. \code{NULL} is coerced to
\code{character(0)}.}
}
\value{
A parser
}
\description{
Sometimes we are not interested in the result from a parser at all, only
that the parser succeeds. For example, if we find a reserved word during
lexical analysis, it may be convenient to return some short representation
rather than the string itself. The \verb{\%ret\%} combinator is useful in such
cases. The parser \code{(p \%ret\% v)} has the same behavior as \code{p}, except that it
returns the value \code{v} if successful

This parser is identical to \code{p \%using\% (function(x) {return(c)})}. You may
sometimes want to use \link{\%using\%} itself for more flexibility.
}
\section{Definition}{


\verb{\%ret\% <- function(p, c) \{p \%using\% function(x) c\}}
}

\examples{
(literal("A") \%ret\% ("We have an A!")) (LETTERS[1:5])
}
\seealso{
\link{\%using\%}
}
