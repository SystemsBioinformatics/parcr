% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic_parsers.R
\name{succeed}
\alias{succeed}
\alias{fail}
\title{The most basic parsers.}
\usage{
succeed(left)

fail()
}
\arguments{
\item{left}{any R-object constructed from a parsed vector.}
}
\description{
These are the most basic constructors of a parser, but they are important
cogs of the parser machinery. The \code{succeed} parser always succeeds, without
consuming any input, whereas the \code{fail} parser always fails.
}
\details{
The \code{succeed} parser constructs a \code{list} object with a 'left' or L-part
that contains the parser result of the consumed part of the input vector and
the 'right' or R-part that contains the unconsumed part of the vector. Since
the outcome of succeed does not depend on its input, its result value must
be pre-determined, so it is included as an extra parameter.

While \code{succeed} never fails, \code{fail} always does, regardless of the input
vector. It returns the empty list \code{list()} to signal this fact.
}
\section{Note}{

You will probably never have to use these functions when constructing
parsers.
}

\examples{
succeed("A")("abc")
succeed(data.frame(title="Keisri hull", author="Jaan Kross"))(c("Unconsumed","text"))
fail()("abc")

}
